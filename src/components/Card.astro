---
import PixelarticonsDownload from "~icons/pixelarticons/download";
import PixelarticonsArrowUp from "~icons/pixelarticons/arrow-up";
import PixelarticonsArrowDown from "~icons/pixelarticons/arrow-down";

export interface Props {
    data: {
        title: string;
        author: string;
        mapper: string;
        difficulty?: string;
        image: string;
        id: string;
        score: number;
        link: string;
        version: string;
        uploader: string;
        uploadedByBot: string;
    };

    // Useful for when in dashboard
    showMapper?: boolean;

    // TODO: actually handle
    /**
     * For when a track is owned by the current user - we visibly
     * disable the upvote/downvote button in this case
     */
    isOwned?: boolean;
}

const {
    data: {
        title,
        author,
        mapper,
        difficulty,
        image,
        id,
        score,
        link,
        version,
        uploader,
        uploadedByBot,
    },
    showMapper = true,
    isOwned = false,
} = Astro.props;

const _difficulty = (
    difficulty ? JSON.parse(difficulty) : [{ name: "----", value: undefined }]
) as [{ name: string | undefined; value: string | undefined }];

const difficulties = _difficulty.map((diff) => {
    if (diff.name == "----") {
        return "----";
    } else if (diff.name && diff.value) {
        return diff.name + " " + diff.value;
    } else if (diff.name && !diff.value) {
        return diff.name;
    } else if (!diff.name && diff.value) {
        return diff.value;
    } else {
        return "----";
    }
});
---

<div data-id={id} class="card" style={`background: no-repeat 100%/100% url(${image}), white`}>
    <!-- We use this to quickly move the element to the right w/ flex. -->
    <div></div>
    <div class="content">
        <div class="contentInner">
            <h2><a href={`/track/${id}`}>{title}</a></h2>
            <p>by: {author}</p>
            {showMapper && <p>mapper: {mapper}</p>}
            <p>
                {difficulties?.length! > 1 ? "Difficulties: " : "Difficulty: "}
                {
                    difficulties.map((diff, i) => {
                        if (i == 0) {
                            return diff;
                        } else {
                            return <p>{diff}</p>;
                        }
                    })
                }
            </p>
        </div>
        <div class="actions">
            <button>
                <PixelarticonsArrowUp width="24px" height="24px" />
            </button>
            <span class="score">{score}</span>
            <button>
                <PixelarticonsArrowDown width="24px" height="24px" />
            </button>
            <div class="sep"></div>
            <a target="_blank" rel="noopener noreferrer" href={"/api/chart/" + id}>
                <PixelarticonsDownload width="24px" height="24px" />
            </a>
        </div>
    </div>

    <style lang="scss">
        a {
            color: black;
        }

        div.card {
            // The 2x1 image
            width: 480px;
            height: 240px;

            background-size: cover;

            h2 {
                margin-bottom: 0.5rem;
            }

            display: flex;
            justify-content: space-between;
        }

        div.content {
            text-align: right;
            width: 50%;
            background-color: rgba(255, 255, 255, 0.9);

            display: flex;
            flex-direction: column;
            justify-content: space-between;

            .contentInner {
                padding: 6px;
            }

            .actions {
                width: 100%;
                background-color: white;
                padding: 6px;
                display: flex;
                align-items: center;
                justify-content: right;

                .sep {
                    width: 8px;
                }

                .score {
                    font-size: 24px;
                }

                button,
                a {
                    background: none;
                    border: none;
                    padding: 0;

                    width: 24px;
                    height: 24px;

                    cursor: pointer;
                }
            }
        }
    </style>
</div>
